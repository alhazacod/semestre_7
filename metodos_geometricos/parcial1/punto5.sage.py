

# This file was *autogenerated* from the file punto5.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)
t,x = var('t x')

# Creamos una variedad de dimension 2 con structura lorentziana
M = Manifold(_sage_const_2 , 'M', structure='Lorentzian')
print(M)

#Espacio "original" en t,x
X = M.chart('t x', names=('t', 'x',)); (t, x,) = X._first_ngens(2)
X_f = X.frame()
print(f'X frame: {X_f}')
g = M.metric()
g[_sage_const_0 ,_sage_const_0 ] = -_sage_const_1 
g[_sage_const_1 ,_sage_const_1 ] = _sage_const_1  
print(g[:])
# Transformacion hacia psi,zeta
psi,zeta = var('psi zeta')
PZ = M.chart('psi zeta', names=('psi', 'zeta',)); (psi, zeta,) = PZ._first_ngens(2)
print(f'PZ: {PZ}')

transformation = PZ.transition_map(X, [_sage_const_1 /_sage_const_2 *tan(_sage_const_1 /_sage_const_2 *(psi+zeta))- _sage_const_1 /_sage_const_2 *tan(_sage_const_1 /_sage_const_2 *(psi-zeta)), _sage_const_1 /_sage_const_2 *tan(_sage_const_1 /_sage_const_2 *(psi+zeta))+ _sage_const_1 /_sage_const_2 *tan(_sage_const_1 /_sage_const_2 *(psi-zeta))])
transformation.set_inverse(atan(t+x)+atan(t-x),atan(t+x)-atan(t-x))
print(f'frame: {PZ.frame()}')
print(latex(g.display(PZ)))
print(f'g[0,0]: {latex(g[PZ.frame(),_sage_const_0 ,_sage_const_0 ])}')
print(f'g[1,1]: {latex(g[PZ.frame(),_sage_const_1 ,_sage_const_1 ])}')


######## Anotaciones:

# Se logró calcular la metrica pero la expresion es extremadamente larga y no se logró identificar el facto omega.


