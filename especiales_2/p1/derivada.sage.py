

# This file was *autogenerated* from the file derivada.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_1 = Integer(1)
z = var('z', domain='complex')
__tmp__=var("z"); f = symbolic_expression(_sage_const_2 *z**_sage_const_2 +_sage_const_3 *z+_sage_const_1  ).function(z)
__tmp__=var("z"); g = symbolic_expression(z+I/z).function(z)
__tmp__=var("z"); h = symbolic_expression((z-_sage_const_1 )**_sage_const_2 ).function(z)
__tmp__=var("z"); fg = symbolic_expression(f(g(z))).function(z)
__tmp__=var("z"); gh = symbolic_expression(g(h(z))).function(z)
__tmp__=var("z"); func = symbolic_expression(fg(z)-gh(z)).function(z)
__tmp__=var("z"); deriv = symbolic_expression(derivative(func(z),z)).function(z)
print(deriv(z))
deriv(_sage_const_2 -_sage_const_3 *I)

