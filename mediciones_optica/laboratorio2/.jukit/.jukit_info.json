{"cmd": "\nx = raw_data['D_o']+raw_data['D_i']\ny = raw_data['D_o']*raw_data['D_i']\n\nplt.scatter(x,y,label = 'Datos obtenidos')\nplt.xlabel(f'$S_0+S_i [cm]$', color = \"black\")\nplt.ylabel(f'$S_oS_i [cm^2]$', color = \"black\")\nplt.title('Suma de las distancias vs Producto de las distancias', color = \"black\")\nplt.grid()\n\n\n#Realizamos la regresion \nreg_func = lambda x,a,b: a*x+b\ncoef,cov = curve_fit(reg_func, x,y)\n# La regresion da unos valores muy cercanos pero cambi√© manualmente el c para que diera mejor el ajuste\na,b = coef\n\nresiduals = y- reg_func(x, a,b)\nss_res = np.sum(residuals**2)\nss_tot = np.sum((y-np.mean(y))**2)\nr_squared = 1 - (ss_res / ss_tot)\n\n\nxx = np.linspace(50,110,50)\nyy = reg_func(xx,a,b)\n\n# Graficamos la regresion  \nplt.plot(xx,yy,c=\"green\",label=f'$S_0S_i = (S_0+S_i)*({a:.2f}\\pm {cov[0,0]:.2f})+({b:.2f}\\pm {cov[0,0]:.2f})$\\n $R^2 = {r_squared:.3f}$')\n\nplt.legend()\nplt.rcParams['axes.facecolor'] = 'white'\nplt.savefig('Suma_producto.jpg')\n", "cmd_opts": " --cell_id=2DuZqxdAZk -s", "import_complete": 1, "terminal": "kitty"}