{"cmd": "\n#Diagrama de bode\nx = raw_data['Frecuencia (kHz)']\ny = raw_data['Voltaje (mV)']\n\nv_out = y\nv_in = 5 #[V]\nA_v = 20 * np.log10(v_out/v_in)\n\nx = np.log(x) \ny = A_v \n\n#Graficamos los datos\nplt.scatter(x,y)\nplt.grid()\nplt.xlabel('Ln(Frecuencia)', color = 'black')\nplt.ylabel('20 Log10(V_out/V_in)', color = 'black')\nplt.title('Diagrama de Bode', color = 'black')\n\n\n#antes del pico \nx_bode_b = x[:10]\ny_bode_b = y[:10]\n\n#Realizamos la regresion \nreg_func = lambda x,a,b: a*x+b\ncoef,cov = curve_fit(reg_func, x_bode_b,y_bode_b)\n# La regresion da unos valores muy cercanos pero cambié manualmente el c para que diera mejor el ajuste\na,b = coef\n\n\nxx = np.linspace(0,3.2,50)\nyy = reg_func(xx,a,b)\n\n# Graficamos la regresion  \nplt.plot(xx,yy,c=\"green\",label=f'y = x*({a:.2f})+{b:.2f}')\n\n#despues del pico \nx_bode_a = x[24:]\ny_bode_a = y[24:]\n\n#Realizamos la regresion \nreg_func = lambda x,a,b: a*x+b\ncoef,cov = curve_fit(reg_func, x_bode_a,y_bode_a)\n# La regresion da unos valores muy cercanos pero cambié manualmente el c para que diera mejor el ajuste\na,b = coef\n\n\nxx = np.linspace(3.6,4.1,50)\nyy = reg_func(xx,a,b)\n\n# Graficamos la regresion  \nplt.plot(xx,yy,c=\"orange\",label=f'y =x*({a:.2f})+{b:.2f}')\n\nplt.legend()\n\nplt.savefig('dobe.jpg')", "cmd_opts": " --cell_id=Tmb2Mqjh6Y -s", "import_complete": 1, "terminal": "kitty"}